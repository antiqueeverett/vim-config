## handy ---------------------------------------------------------------------

# comment
snippet b-comm "+ inline comment" w
/* ${1:title/name}:
 *
 * ${2:brief}
 */
endsnippet

# comment
snippet i-comm "+ inline comment" w
/* ${1} */
endsnippet

# todo
snippet todo "+ todo" w
/* todo: ${1}
 * date: `!v strftime("%Y-%m-%d %H:%M")`
 */
endsnippet

# cite source
snippet ref "+ ref" w
/* ${1:symbol} ref:
 * <${2}>
 * date: `!v strftime("%Y-%m-%d %H:%M")`
 */
endsnippet


## glog ----------------------------------------------------------------------
# include google logger
snippet glog "+ google logger" w
#include <glog/logging.h>
endsnippet

# include google logger
snippet init-glog "+ init glog" w
google::InitGoogleLogging(argv[0]);
endsnippet

# glog info
snippet info "+ glog info" w
LOG(INFO) << ;
endsnippet

# glog warning
snippet warning "+ glog warning" w
LOG(WARNING) << ;
endsnippet

# glog error
snippet error "+ glog error" w
LOG(ERROR) << ;
endsnippet

# glog fatal
snippet fatal "+ glog fatal" w
LOG(FATAL) << ;
endsnippet

# glog dfatal
snippet dfatal "+ glog dfatal" w
LOG(DFATAL) << ;
endsnippet


## symbol definition ---------------------------------------------------------
# add class
snippet class " + .h class" b
#ifndef ${2:`!v substitute(vim_snippets#Filename('$1_H','ClassName'),'.*','\U&\E','')`}
#define $2

class ${1:`!v substitute(substitute(vim_snippets#Filename('$1','ClassName'),'^.','\u&',''), '_\(\w\)', '\u\1', 'g')`}
{
private:
	$3
public:
	$1();
	~$1();
};

#endif /* $2 */
endsnippet
