## handy ---------------------------------------------------------------------

# comment
snippet b-comm "+ inline comment" w
/* ${1:title/name}:
 *
 * ${2:brief}
 */
endsnippet

# comment
snippet i-comm "+ inline comment" w
/* ${1} */
endsnippet

# todo
snippet todo "+ todo" w
/* todo: ${1}
 * date: `!v strftime("%Y-%m-%d %H:%M")`
 */
endsnippet

# cite source
snippet ref "+ ref" w
/* ${1:symbol} ref:
 * <${2}>
 * date: `!v strftime("%Y-%m-%d %H:%M")`
 */
endsnippet


## glog ----------------------------------------------------------------------
# include google logger
snippet glog "+ google logger" w
#include <glog/logging.h>
endsnippet

# include google logger
snippet init-glog "+ init glog" w
google::InitGoogleLogging(argv[0]);
endsnippet

# glog info
snippet info "+ glog info" w
LOG(INFO) << "${1:str-msg} " << ${2:var} << " ${2:str-msg}";
endsnippet

# glog warning
snippet warning "+ glog warning" w
LOG(WARNING) << "${1:str-msg} " << ${2:var} << " ${2:str-msg}";
endsnippet

# glog error
snippet error "+ glog error" w
LOG(ERROR) << "${1:str-msg} " << ${2:var} << " ${2:str-msg}";
endsnippet

# glog fatal
snippet fatal "+ glog fatal" w
LOG(FATAL) << "${1:str-msg} " << ${2:var} << " ${2:str-msg}";
endsnippet

# glog dfatal
snippet dfatal "+ glog dfatal" w
LOG(DFATAL) << "${1:str-msg} " << ${2:var} << " ${2:str-msg}";
endsnippet


## symbol definition ---------------------------------------------------------
# add class
snippet class "+ class" w
/*! \class $1
 *  \brief ${3:Brief class description}
 *
 *  ${4:Detailed description}
 */
class ${1:`vim_snippets#Filename('$1', 'name')`}
{
	private:

	public:
		$1(${2});
		virtual ~$1();

	protected:
		m_${5}; /*!< ${6:Member description} */
};
endsnippet

